// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Meso.DAL.Certificaciones.Entities;
using Microsoft.EntityFrameworkCore;

namespace Meso.DAL.Certificaciones;

public partial class CertificadorDBContext : DbContext
{
    public CertificadorDBContext(DbContextOptions<CertificadorDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<DTE_Anulacion> DTE_Anulacion { get; set; }

    public virtual DbSet<DTE_Certificacion> DTE_Certificacion { get; set; }

    public virtual DbSet<DTE_Detalle> DTE_Detalle { get; set; }

    public virtual DbSet<DTE_Factura> DTE_Factura { get; set; }

    public virtual DbSet<Emisor> Emisor { get; set; }

    public virtual DbSet<Establecimiento> Establecimiento { get; set; }

    public virtual DbSet<Logs_Bitacora> Logs_Bitacora { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<DTE_Anulacion>(entity =>
        {
            entity.HasKey(e => e.AnulacionId).HasName("PK__DTE_Anul__B794B6B533DB0F29");

            entity.Property(e => e.FechaIngreso).HasDefaultValueSql("(sysutcdatetime())");

            entity.HasOne(d => d.Factura).WithOne(p => p.DTE_Anulacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Anulacion_Factura");
        });

        modelBuilder.Entity<DTE_Certificacion>(entity =>
        {
            entity.HasKey(e => e.CertificacionId).HasName("PK__DTE_Cert__398F23C4A1998BD2");

            entity.Property(e => e.FechaIngreso).HasDefaultValueSql("(sysutcdatetime())");

            entity.HasOne(d => d.Factura).WithOne(p => p.DTE_Certificacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Certificacion_Factura");
        });

        modelBuilder.Entity<DTE_Detalle>(entity =>
        {
            entity.HasKey(e => e.DetalleId).HasName("PK__DTE_Deta__6E19D6DA608CD662");

            entity.HasOne(d => d.Factura).WithMany(p => p.DTE_Detalle)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Detalle_Factura");
        });

        modelBuilder.Entity<DTE_Factura>(entity =>
        {
            entity.HasKey(e => e.FacturaId).HasName("PK__DTE_Fact__5C024865E6F80779");

            entity.Property(e => e.FechaIngreso).HasDefaultValueSql("(sysutcdatetime())");

            entity.HasOne(d => d.Establecimiento).WithMany(p => p.DTE_Factura)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Factura_Establecimiento");
        });

        modelBuilder.Entity<Emisor>(entity =>
        {
            entity.HasKey(e => e.EmisorId).HasName("PK__Emisor__E03A48043C600DE4");

            entity.Property(e => e.FechaRegistro).HasDefaultValueSql("(sysutcdatetime())");
            entity.Property(e => e.PuedeCertificar).HasDefaultValue(true);
        });

        modelBuilder.Entity<Establecimiento>(entity =>
        {
            entity.HasKey(e => e.EstablecimientoId).HasName("PK__Establec__9CFF6F86E302401D");

            entity.Property(e => e.NIT).IsFixedLength();

            entity.HasOne(d => d.Emisor).WithMany(p => p.Establecimiento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Establecimiento_Emisor");
        });

        modelBuilder.Entity<Logs_Bitacora>(entity =>
        {
            entity.HasKey(e => e.BitacoraId).HasName("PK__Logs_Bit__7ACF9B38E8CD1CED");

            entity.Property(e => e.FechaAccion).HasDefaultValueSql("(sysutcdatetime())");

            entity.HasOne(d => d.Factura).WithMany(p => p.Logs_Bitacora)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Log_Factura");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}